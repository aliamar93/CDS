@model DAL.DBEntities.tblProduct



<script type="text/javascript">
    function ProductSuccess(result) {
        debugger;
        if (result.success) {
            window.location.reload();
        }
        else {
            $('.modal-backdrop').remove();
            $('#ProductModal').modal('show');
        }
    }
</script>

@{ 
    string actionName = ViewBag.ActionName == null ? "Save" : ViewBag.ActionName;
    string formHeading = "New Product";
    if(Model != null && Model.ID > 0)
    {
        formHeading = "Product (" + Model.Name + ")";
    }
}

@using (Ajax.BeginForm(actionName, "Product", new AjaxOptions { HttpMethod = "POST", UpdateTargetId = "ModalProduct", OnSuccess = "ProductSuccess" }, new { @id = "ProductForm" }))
{

    @Html.ValidationSummary(true);



    <div class="modal fade" id="ProductModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">×</span></button>
                    <h4 class="modal-title" id="myModalLabel">@formHeading</h4>
                </div>
                <div class="modal-body">
                    <div class="form-horizontal">

                        <div class="form-group">
                            <label class="col-sm-3 control-label">Product Name</label>
                            <div class="col-sm-9">
                                @Html.HiddenFor(model => model.ID)
                                @Html.TextBoxFor(model => model.Name, new { @class = "form-control", validate = "Validate", require = "Please Enter Name" })
                                @Html.ValidationMessageFor(model => model.Name)
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-sm-3 control-label">Product Type</label>
                            <div class="col-sm-9">
                                @Html.DropDownListFor(model => model.ProductTypeID, new SelectList(ViewBag.ProductTypeList, "ID", "TypeName"), "Select Product Type", new Dictionary<string, object> { { "class", "form-control selectpicker" }, { "data-live-search", true } })
                                @Html.ValidationMessageFor(model => model.ProductTypeID)
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-sm-3 control-label">Product Code</label>
                            <div class="col-sm-9">
                                @Html.TextBoxFor(model => model.ProductCode, new { @class = "form-control", @disabled = "disabled" })
                                @Html.ValidationMessageFor(model => model.ProductCode)
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="col-sm-3 control-label">SKU</label>
                            <div class="col-sm-9">
                                @Html.TextBoxFor(model => model.SKU, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.SKU)
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="col-sm-3 control-label">Price</label>
                            <div class="col-sm-9">
                                @Html.TextBoxFor(model => model.Price, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Price)
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="col-sm-3 control-label">Description</label>
                            <div class="col-sm-9">
                                @Html.TextAreaFor(model => model.Description, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Description)
                            </div>
                        </div>

                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    <button type="submit" id="btnSave" class="btn bg-teal-400 btnSubmit">Submit</button>
                </div>
            </div>
        </div>
    </div>
}


<script src="@Url.Content("~/Assets/Scripts/plugins/mvc/jquery.unobtrusive-ajax.min.js")"></script>
<script src="@Url.Content("~/Assets/Scripts/plugins/foolproof/mvcfoolproof.unobtrusive.min.js")"></script>


<script type="text/javascript">
    $(document).ready(function () {
        $(".selectpicker").selectpicker();

        validateModal("ProductForm");
    });
</script>

